zad1

int
00000000000000000000000000000000 ; 0 ; 32 bits
00000000000000000000000001011011 ; 91 ; 32 bits
11111111111111111111111110100101 ; -91 ; 32 bits
00000000000000000000000000110001 ; 49 ; 32 bits
00000000000000011110001001000000 ; 123456 ; 32 bits
11111111111111111111101110101001 ; -1111 ; 32 bits
10000000000000000000000000000000 ; -2147483648 ; 32 bits
01111111111111111111111111111111 ; 2147483647 ; 32 bits
uint
00000000000000000000000000000000 ; 0 ; 32 bits
00000000000000000000000001011011 ; 91 ; 32 bits
11111111111111111111111110100101 ; 4294967205 ; 32 bits
00000000000000000000000000110001 ; 49 ; 32 bits
00000000000000011110001001000000 ; 123456 ; 32 bits
11111111111111111111101110101001 ; 4294966185 ; 32 bits
00000000000000000000000000000000 ; 0 ; 32 bits
11111111111111111111111111111111 ; 4294967295 ; 32 bits
float
00000000000000000000000000000000 ; 0.00000000000000000000 ; 32 bits
01000010101101100000000000000000 ; 91.00000000000000000000 ; 32 bits
11000010101101100000000000000000 ; -91.00000000000000000000 ; 32 bits
00111110100110011001100110011010 ; 0.30000001192092895508 ; 32 bits
00111101110011001100110011001101 ; 0.10000000149011611938 ; 32 bits
01001001100101101011010000111001 ; 1234567.12500000000000000000 ; 32 bits
00000000100000000000000000000000 ; 0.00000000000000000000 ; 32 bits
01111111011111111111111111111111 ; 340282346638528859811704183484516925440.00000000000000000000 ; 32 bits
double
0000000000000000000000000000000000000000000000000000000000000000 ; 0.00000000000000000000 ; 64 bits
0100000001010110110000000000000000000000000000000000000000000000 ; 91.00000000000000000000 ; 64 bits
0001110011011110100001111100000011000010101101100000000000000000 ; -91.00000000000000000000 ; 64 bits
0001110011011110100001111100000000111110100110011001100110011010 ; 0.30000001192092895508 ; 64 bits
0001110011011110100001111100000000111101110011001100110011001101 ; 0.10000000149011611938 ; 64 bits
0001110011011110100001111100000001001001100101101011010000111001 ; 1234567.12500000000000000000 ; 64 bits
0001110011011110100001111100000000000000000000000000000000000000 ; 0.00000000000000000000 ; 64 bits
0001110011011110100001111100000001111111100000000000000000000000 ; inf ; 64 bits

zad 2

przy danych 0.2f , 0.2f , 0.3f
0.69999998807907104492
0.70000004768371582031

przy danych 0.5f , 0.5f, 0.5f
1.50000000000000000000
1.50000000000000000000

zad 3

przy danych 0.2f , 0.2f , 0.3f
0.10000000149011611938
0.10000000894069671631

przy danych 0.5f , 0.5f, 0.5f
0.50000000000000000000
0.50000000000000000000

zad 4

suma a+b=1.00000000000000000000000000000000000000000000000000

zad 5

utworzyłem zmienną epsilon który sprawdział czy liczba jest ma margines błędu poniżej 1e-9.

zad 6

suma=10.00000190734863281250

zad 7
wynik=137

0
130
0
120
137
120
0